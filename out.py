def lengthOfLongestSubstring(self, s: str,group=lambda depth,iterable:next(filter(lambda x:type(x)==tuple and len(x)==2 and (x[0]==... and x[1]<=depth or x[0]==()),iterable),(...,float('inf')))) -> int:
	return group(0,[sol:=0,group(1,(group(1,[i:=num,used:=[],count:=0,group(2,((...,2) if s[i] in used else group(2,[count:=count + 1,(...,2)]) if i == len(s) - 1 else group(2,[used.append(s[i]),count:=count + 1,i:=i + 1]) for _ in iter(int, 1))),sol:=max(sol, count)]) for num in range(len(s)))),((),sol)])[1]