def threeSum(self, nums: List[int],group=lambda depth,iterable:next(filter(lambda x:type(x)==tuple and len(x)==2 and (x[0]==... and x[1]<=depth or x[0]==()),iterable),(...,float('inf')))) -> List[List[int]]:
	return group(0,[(n:=len(nums)),nums.sort(),(sol:=set()),group(1,(group(1,[(j:=i+1),(k:=n-1),group(2,((...,2) if not( j < k) else (j:=j+1) if nums[i] + nums[j] + nums[k] < 0 else (k:=k-1) if nums[i] + nums[j] + nums[k] > 0 else group(2,[sol.add((nums[i], nums[j], nums[k])),(j:=j+1),(k:=k-1)]) for _ in iter(int, 1)))]) for i in range(n-2))),((),list(sol))])[1]